{"version":3,"sources":["components/Counter/Counter.jsx","App.js","reportWebVitals.js","index.js","components/Counter/Counter.module.css"],"names":["Counter","useState","count","setCount","className","s","counterContainer","counterNumber","counterButtons","counterButtonIn","onClick","counterButtonDe","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById","module","exports"],"mappings":"+OA0BeA,EAvBC,WAAO,IAAD,EACIC,mBAAS,GADb,mBACfC,EADe,KACRC,EADQ,KAQpB,OACE,sBAAKC,UAAWC,IAAEC,iBAAlB,UACE,qBAAKF,UAAWC,IAAEE,cAAlB,SAAkCL,IAClC,sBAAKE,UAAWC,IAAEG,eAAlB,UACE,wBAAQJ,UAAWC,IAAEI,gBAAiBC,QAVtB,WACpBP,EAASD,EAAQ,IASb,sBAGA,wBAAQE,UAAWC,IAAEM,gBAAiBD,QAVtB,WACpBP,EAASD,EAAQ,IASb,6BCXOU,EAJH,WACV,OAAO,cAAC,EAAD,KCQMC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,OCAdQ,IAASC,OACP,cAAC,IAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K,kBChBAa,EAAOC,QAAU,CAAC,iBAAmB,kCAAkC,cAAgB,+BAA+B,eAAiB,gCAAgC,gBAAkB,iCAAiC,gBAAkB,oC","file":"static/js/main.624c75b4.chunk.js","sourcesContent":["import { useState } from \"react\";\r\nimport s from \"./Counter.module.css\";\r\n\r\nconst Counter = () => {\r\n  let [count, setCount] = useState(0);\r\n  const handleClickIn = () => {\r\n    setCount(count + 1);\r\n  };\r\n  const handleClickDe = () => {\r\n    setCount(count - 1);\r\n  };\r\n  return (\r\n    <div className={s.counterContainer}>\r\n      <div className={s.counterNumber}>{count}</div>\r\n      <div className={s.counterButtons}>\r\n        <button className={s.counterButtonIn} onClick={handleClickIn}>\r\n          Increase\r\n        </button>\r\n        <button className={s.counterButtonDe} onClick={handleClickDe}>\r\n          Decrease\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Counter;\r\n","import \"./App.css\";\nimport Counter from \"./components/Counter/Counter\";\n\nconst App = () => {\n  return <Counter />;\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"counterContainer\":\"Counter_counterContainer__XPgWv\",\"counterNumber\":\"Counter_counterNumber__7crh3\",\"counterButtons\":\"Counter_counterButtons__18Yrl\",\"counterButtonIn\":\"Counter_counterButtonIn__2gOf1\",\"counterButtonDe\":\"Counter_counterButtonDe__12Vhu\"};"],"sourceRoot":""}